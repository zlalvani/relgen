name: Release to Npm

on:
  push:
    branches: [main]
    paths:
      - "apps/relgen/**"

jobs:
  check-cli:
    name: "Check if release is needed"
    runs-on: "ubuntu-latest"
    outputs:
      exists: ${{ steps.check-tag.outputs.exists }}
    steps:
      - uses: actions/checkout@v4
      # retrieves the version from package.json
      - uses: martinbeentjes/npm-get-version-action@main
        id: get-version
      # check if the tag exists on the repo
      - uses: mukunku/tag-exists-action@v1.1.0
        id: check-tag
        with:
          tag: relgen-v${{ steps.get-version.outputs.current-version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-cli:
    name: "Release"
    needs: check-cli
    if: needs.check-cli.outputs.exists == 'false'
    runs-on: "ubuntu-latest"
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: martinbeentjes/npm-get-version-action@main
        id: get-version
        with:
          path: apps/relgen
      - uses: actions/create-release@v1
        id: create-release
        with:
          draft: false
          prerelease: false
          release_name: relgen-v${{ steps.get-version.outputs.current-version}}
          tag_name: relgen-v${{ steps.get-version.outputs.current-version}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish-cli:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup

      - run: pnpm install --frozen-lockfile
      - run: pnpm --filter=relgen run build
      - run: cp README.md apps/relgen/README.md # copy the README to the CLI folder so it gets published
      - run: pnpm --filter=relgen publish --tag latest --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: "${{ secrets.NPM_TOKEN }}"
